@echo off
REM ===========================================================================
REM windows-import-vba.bat - Import VBA modules into Excel workbook
REM ===========================================================================
REM
REM ⚠️  DEPRECATED - This script is deprecated as of M22 (2025-10-28)
REM ⚠️  Please use: 1-setup-all.bat instead
REM ⚠️
REM ⚠️  The new setup script includes VBA import plus:
REM ⚠️  - Workbook creation
REM ⚠️  - Database initialization
REM ⚠️  - UI worksheet generation (5 production sheets)
REM ⚠️  - Complete automated setup
REM
REM ===========================================================================
REM Purpose: Import .bas files from ../excel/vba/ into TradingPlatform.xlsm
REM
REM Prerequisites:
REM   - Excel installed on Windows
REM   - TradingPlatform.xlsm exists in this directory
REM   - VBA modules exist in ../excel/vba/
REM
REM Usage: windows-import-vba.bat
REM
REM Note: This script uses VBScript to programmatically import modules
REM       Requires "Trust access to the VBA project object model" enabled
REM       in Excel: File > Options > Trust Center > Trust Center Settings >
REM       Macro Settings > Check "Trust access to the VBA project object model"
REM
REM Created: 2025-10-27 (M20 - Windows Integration Package)
REM ===========================================================================

echo ========================================
echo  VBA Module Import Script
echo  Trading Engine v3
echo ========================================
echo.
echo ⚠️  WARNING: This script is DEPRECATED
echo ⚠️
echo ⚠️  Please use: 1-setup-all.bat instead
echo ⚠️
echo ⚠️  The new script provides:
echo ⚠️  - Complete workbook setup
echo ⚠️  - VBA module import
echo ⚠️  - Database initialization
echo ⚠️  - 5 production UI worksheets
echo ⚠️
echo.
set /p continue="Do you want to continue with this deprecated script? (y/n): "
if /i not "%continue%"=="y" (
    echo.
    echo Exiting. Please run: 1-setup-all.bat
    pause
    exit /b 0
)
echo.

REM Check if Excel workbook exists
if not exist "TradingPlatform.xlsm" (
    echo ERROR: TradingPlatform.xlsm not found in current directory
    echo Please ensure the Excel workbook is in the same folder as this script.
    pause
    exit /b 1
)

REM Check if VBA modules directory exists
if not exist "..\excel\vba" (
    echo ERROR: VBA modules directory not found at ..\excel\vba
    echo Please ensure the project structure is intact.
    pause
    exit /b 1
)

echo Excel workbook: TradingPlatform.xlsm
echo VBA modules source: ..\excel\vba\
echo.

REM Create temporary VBScript file for importing
echo Creating import script...
echo ' VBA Module Import Script > import_vba.vbs
echo ' Generated by windows-import-vba.bat >> import_vba.vbs
echo. >> import_vba.vbs
echo Set objExcel = CreateObject("Excel.Application") >> import_vba.vbs
echo objExcel.Visible = False >> import_vba.vbs
echo objExcel.DisplayAlerts = False >> import_vba.vbs
echo. >> import_vba.vbs
echo ' Get script directory >> import_vba.vbs
echo Set objFSO = CreateObject("Scripting.FileSystemObject") >> import_vba.vbs
echo strScriptDir = objFSO.GetParentFolderName(WScript.ScriptFullName) >> import_vba.vbs
echo. >> import_vba.vbs
echo ' Open workbook >> import_vba.vbs
echo strWorkbookPath = strScriptDir ^& "\TradingPlatform.xlsm" >> import_vba.vbs
echo Set objWorkbook = objExcel.Workbooks.Open(strWorkbookPath) >> import_vba.vbs
echo. >> import_vba.vbs
echo ' Remove existing modules if present >> import_vba.vbs
echo On Error Resume Next >> import_vba.vbs
echo For Each comp In objWorkbook.VBProject.VBComponents >> import_vba.vbs
echo     If comp.Type = 1 Then ' vbext_ct_StdModule >> import_vba.vbs
echo         Select Case comp.Name >> import_vba.vbs
echo             Case "TFTypes", "TFHelpers", "TFEngine", "TFTests" >> import_vba.vbs
echo                 objWorkbook.VBProject.VBComponents.Remove comp >> import_vba.vbs
echo         End Select >> import_vba.vbs
echo     End If >> import_vba.vbs
echo Next >> import_vba.vbs
echo On Error Goto 0 >> import_vba.vbs
echo. >> import_vba.vbs
echo ' Import new modules >> import_vba.vbs
echo strVBADir = objFSO.GetParentFolderName(strScriptDir) ^& "\excel\vba\" >> import_vba.vbs
echo. >> import_vba.vbs
echo WScript.Echo "Importing TFTypes.bas..." >> import_vba.vbs
echo objWorkbook.VBProject.VBComponents.Import strVBADir ^& "TFTypes.bas" >> import_vba.vbs
echo. >> import_vba.vbs
echo WScript.Echo "Importing TFHelpers.bas..." >> import_vba.vbs
echo objWorkbook.VBProject.VBComponents.Import strVBADir ^& "TFHelpers.bas" >> import_vba.vbs
echo. >> import_vba.vbs
echo WScript.Echo "Importing TFEngine.bas..." >> import_vba.vbs
echo objWorkbook.VBProject.VBComponents.Import strVBADir ^& "TFEngine.bas" >> import_vba.vbs
echo. >> import_vba.vbs
echo WScript.Echo "Importing TFTests.bas..." >> import_vba.vbs
echo objWorkbook.VBProject.VBComponents.Import strVBADir ^& "TFTests.bas" >> import_vba.vbs
echo. >> import_vba.vbs
echo ' Save and close >> import_vba.vbs
echo objWorkbook.Save >> import_vba.vbs
echo objWorkbook.Close >> import_vba.vbs
echo objExcel.Quit >> import_vba.vbs
echo. >> import_vba.vbs
echo ' Cleanup >> import_vba.vbs
echo Set objWorkbook = Nothing >> import_vba.vbs
echo Set objExcel = Nothing >> import_vba.vbs
echo Set objFSO = Nothing >> import_vba.vbs
echo. >> import_vba.vbs
echo WScript.Echo "VBA modules imported successfully!" >> import_vba.vbs

echo Script created: import_vba.vbs
echo.

REM Execute VBScript
echo Importing VBA modules...
echo.
cscript //nologo import_vba.vbs

if %errorlevel% neq 0 (
    echo.
    echo ERROR: VBA import failed!
    echo.
    echo Common issues:
    echo   1. "Trust access to VBA project object model" not enabled
    echo      Fix: Excel Options ^> Trust Center ^> Macro Settings
    echo   2. Excel is already running with the workbook open
    echo      Fix: Close Excel and try again
    echo   3. Antivirus blocking VBScript execution
    echo      Fix: Temporarily disable or add exception
    echo.
    pause
    exit /b 1
)

echo.
echo ========================================
echo  VBA Import Complete!
echo ========================================
echo.
echo Next steps:
echo   1. Open TradingPlatform.xlsm in Excel
echo   2. Enable macros when prompted
echo   3. Press Alt+F11 to verify modules loaded
echo   4. Run windows-init-database.bat to setup database
echo.

REM Cleanup temporary VBScript
del import_vba.vbs

pause
