{
  "permissions": {
    "allow": [
      "Bash(cat:*)",
      "Bash(./tf-engine.exe:*)",
      "Bash(awk:*)",
      "Bash(go test:*)",
      "Bash(go list:*)",
      "Bash(go build:*)",
      "Bash(/mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -Command \"\n[Windows.UI.Notifications.ToastNotificationManager, Windows.UI.Notifications, ContentType = WindowsRuntime] | Out-Null\n[Windows.Data.Xml.Dom.XmlDocument, Windows.Data.Xml.Dom.XmlDocument, ContentType = WindowsRuntime] | Out-Null\n\n$template = @''\n<toast>\n    <visual>\n        <binding template=\"\"ToastText02\"\">\n            <text id=\"\"1\"\">TF-Engine GUI Complete!</text>\n            <text id=\"\"2\"\">Native Fyne application built successfully - tf-gui.exe ready to run</text>\n        </binding>\n    </visual>\n</toast>\n''@\n\n$xml = New-Object Windows.Data.Xml.Dom.XmlDocument\n$xml.LoadXml($template)\n$toast = [Windows.UI.Notifications.ToastNotification]::new($xml)\n[Windows.UI.Notifications.ToastNotificationManager]::CreateToastNotifier(''Claude Code'').Show($toast)\n\")",
      "Bash(./tf-gui.exe:*)",
      "Bash(go mod tidy:*)",
      "Bash(/mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -Command \"\n[Windows.UI.Notifications.ToastNotificationManager, Windows.UI.Notifications, ContentType = WindowsRuntime] | Out-Null\n[Windows.Data.Xml.Dom.XmlDocument, Windows.Data.Xml.Dom.XmlDocument, ContentType = WindowsRuntime] | Out-Null\n\n$template = @''\n<toast>\n    <visual>\n        <binding template=\"\"ToastText02\"\">\n            <text id=\"\"1\"\">TF-Engine GUI Complete!</text>\n            <text id=\"\"2\"\">All improvements implemented - British Racing Green theme, dark mode, tooltips, and more!</text>\n        </binding>\n    </visual>\n</toast>\n''@\n\n$xml = New-Object Windows.Data.Xml.Dom.XmlDocument\n$xml.LoadXml($template)\n$toast = [Windows.UI.Notifications.ToastNotification]::new($xml)\n[Windows.UI.Notifications.ToastNotificationManager]::CreateToastNotifier(''Claude Code'').Show($toast)\n\")",
      "Bash(/mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -Command \"\n[Windows.UI.Notifications.ToastNotificationManager, Windows.UI.Notifications, ContentType = WindowsRuntime] | Out-Null\n[Windows.Data.Xml.Dom.XmlDocument, Windows.Data.Xml.Dom.XmlDocument, ContentType = WindowsRuntime] | Out-Null\n\n$template = @''\n<toast>\n    <visual>\n        <binding template=\"\"ToastText02\"\">\n            <text id=\"\"1\"\">TF-Engine GUI v2 Complete!</text>\n            <text id=\"\"2\"\">Button contrast fixed + Bucket system redesigned - Ready to test!</text>\n        </binding>\n    </visual>\n</toast>\n''@\n\n$xml = New-Object Windows.Data.Xml.Dom.XmlDocument\n$xml.LoadXml($template)\n$toast = [Windows.UI.Notifications.ToastNotification]::new($xml)\n[Windows.UI.Notifications.ToastNotificationManager]::CreateToastNotifier(''Claude Code'').Show($toast)\n\")",
      "Bash(/mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -Command \"\n[Windows.UI.Notifications.ToastNotificationManager, Windows.UI.Notifications, ContentType = WindowsRuntime] | Out-Null\n[Windows.Data.Xml.Dom.XmlDocument, Windows.Data.Xml.Dom.XmlDocument, ContentType = WindowsRuntime] | Out-Null\n\n$template = @''\n<toast>\n    <visual>\n        <binding template=\"\"ToastText02\"\">\n            <text id=\"\"1\"\">TF-Engine GUI v6 Complete!</text>\n            <text id=\"\"2\"\">ALL button text fixed - Dark Mode, Evaluate, Reset, Calculate, Check, Save, Refresh now white!</text>\n        </binding>\n    </visual>\n</toast>\n''@\n\n$xml = New-Object Windows.Data.Xml.Dom.XmlDocument\n$xml.LoadXml($template)\n$toast = [Windows.UI.Notifications.ToastNotification]::new($xml)\n[Windows.UI.Notifications.ToastNotificationManager]::CreateToastNotifier(''Claude Code'').Show($toast)\n\")",
      "Bash(powershell.exe -Command \"\n[Windows.UI.Notifications.ToastNotificationManager, Windows.UI.Notifications, ContentType = WindowsRuntime] | Out-Null\n[Windows.Data.Xml.Dom.XmlDocument, Windows.Data.Xml.Dom.XmlDocument, ContentType = WindowsRuntime] | Out-Null\n\n$template = @''\n<toast>\n    <visual>\n        <binding template=\"\"ToastText02\"\">\n            <text id=\"\"1\"\">TF-Engine GUI v8 Complete!</text>\n            <text id=\"\"2\"\">4 major features added: Welcome dialog, Help button, Expandable calendar, VIM keybindings!</text>\n        </binding>\n    </visual>\n</toast>\n''@\n\n$xml = New-Object Windows.Data.Xml.Dom.XmlDocument\n$xml.LoadXml($template)\n$toast = [Windows.UI.Notifications.ToastNotification]::new($xml)\n[Windows.UI.Notifications.ToastNotificationManager]::CreateToastNotifier(''Claude Code'').Show($toast)\n\")",
      "Bash(powershell.exe -Command \"\n[Windows.UI.Notifications.ToastNotificationManager, Windows.UI.Notifications, ContentType = WindowsRuntime] | Out-Null\n[Windows.Data.Xml.Dom.XmlDocument, Windows.Data.Xml.Dom.XmlDocument, ContentType = WindowsRuntime] | Out-Null\n\n$template = @''\n<toast>\n    <visual>\n        <binding template=\"\"ToastText02\"\">\n            <text id=\"\"1\"\">TF-Engine v8 Fixed!</text>\n            <text id=\"\"2\"\">Dialog sizing fixed + VIM logging working - check tf-gui.log when you press F!</text>\n        </binding>\n    </visual>\n</toast>\n''@\n\n$xml = New-Object Windows.Data.Xml.Dom.XmlDocument\n$xml.LoadXml($template)\n$toast = [Windows.UI.Notifications.ToastNotification]::new($xml)\n[Windows.UI.Notifications.ToastNotificationManager]::CreateToastNotifier(''Claude Code'').Show($toast)\n\")",
      "Bash(sqlite3:*)",
      "Bash(powershell.exe -Command \"\n[Windows.UI.Notifications.ToastNotificationManager, Windows.UI.Notifications, ContentType = WindowsRuntime] | Out-Null\n[Windows.Data.Xml.Dom.XmlDocument, Windows.Data.Xml.Dom.XmlDocument, ContentType = WindowsRuntime] | Out-Null\n\n$template = @''\n<toast>\n    <visual>\n        <binding template=\"\"ToastText02\"\">\n            <text id=\"\"1\"\">TF-Engine v9 Complete!</text>\n            <text id=\"\"2\"\">VIM Mode Toggle + 20+ Keybindings + Help Overlay + Command Palette!</text>\n        </binding>\n    </visual>\n</toast>\n''@\n\n$xml = New-Object Windows.Data.Xml.Dom.XmlDocument\n$xml.LoadXml($template)\n$toast = [Windows.UI.Notifications.ToastNotification]::new($xml)\n[Windows.UI.Notifications.ToastNotificationManager]::CreateToastNotifier(''Claude Code'').Show($toast)\n\")",
      "Bash(go version:*)",
      "Bash(powershell.exe -Command \"\n[Windows.UI.Notifications.ToastNotificationManager, Windows.UI.Notifications, ContentType = WindowsRuntime] | Out-Null\n[Windows.Data.Xml.Dom.XmlDocument, Windows.Data.Xml.Dom.XmlDocument, ContentType = WindowsRuntime] | Out-Null\n\n$template = @''\n<toast>\n    <visual>\n        <binding template=\"\"ToastText02\"\">\n            <text id=\"\"1\"\">TF-Engine v10 Built!</text>\n            <text id=\"\"2\"\">Fresh build with keybindings_v2.go - VIM mode ready to test!</text>\n        </binding>\n    </visual>\n</toast>\n''@\n\n$xml = New-Object Windows.Data.Xml.Dom.XmlDocument\n$xml.LoadXml($template)\n$toast = [Windows.UI.Notifications.ToastNotification]::new($xml)\n[Windows.UI.Notifications.ToastNotificationManager]::CreateToastNotifier(''Claude Code'').Show($toast)\n\")",
      "Bash(powershell.exe -Command \"\n[Windows.UI.Notifications.ToastNotificationManager, Windows.UI.Notifications, ContentType = WindowsRuntime] | Out-Null\n[Windows.Data.Xml.Dom.XmlDocument, Windows.Data.Xml.Dom.XmlDocument, ContentType = WindowsRuntime] | Out-Null\n\n$template = @''\n<toast>\n    <visual>\n        <binding template=\"\"ToastText02\"\">\n            <text id=\"\"1\"\">TF-Engine v11 Built!</text>\n            <text id=\"\"2\"\">Fixed button finding - VIM hints will now work! Try pressing F with VIM mode on.</text>\n        </binding>\n    </visual>\n</toast>\n''@\n\n$xml = New-Object Windows.Data.Xml.Dom.XmlDocument\n$xml.LoadXml($template)\n$toast = [Windows.UI.Notifications.ToastNotification]::new($xml)\n[Windows.UI.Notifications.ToastNotificationManager]::CreateToastNotifier(''Claude Code'').Show($toast)\n\")",
      "Bash(powershell.exe -Command \"\n[Windows.UI.Notifications.ToastNotificationManager, Windows.UI.Notifications, ContentType = WindowsRuntime] | Out-Null\n[Windows.Data.Xml.Dom.XmlDocument, Windows.Data.Xml.Dom.XmlDocument, ContentType = WindowsRuntime] | Out-Null\n\n$template = @''\n<toast>\n    <visual>\n        <binding template=\"\"ToastText02\"\">\n            <text id=\"\"1\"\">TF-Engine v13 Complete!</text>\n            <text id=\"\"2\"\">Visual hint overlays + Working scroll (j/k/h/l/d/u/gg/G) - Ready to test!</text>\n        </binding>\n    </visual>\n</toast>\n''@\n\n$xml = New-Object Windows.Data.Xml.Dom.XmlDocument\n$xml.LoadXml($template)\n$toast = [Windows.UI.Notifications.ToastNotification]::new($xml)\n[Windows.UI.Notifications.ToastNotificationManager]::CreateToastNotifier(''Claude Code'').Show($toast)\n\")",
      "Bash(powershell.exe -Command \"[Windows.UI.Notifications.ToastNotificationManager, Windows.UI.Notifications, ContentType = WindowsRuntime] | Out-Null; [Windows.Data.Xml.Dom.XmlDocument, Windows.Data.Xml.Dom.XmlDocument, ContentType = WindowsRuntime] | Out-Null; $template = @''\n<toast>\n    <visual>\n        <binding template=\"\"ToastText02\"\">\n            <text id=\"\"1\"\">TF-Engine v13 Complete!</text>\n            <text id=\"\"2\"\">Visual hint overlays + Working scroll (j/k/h/l/d/u/gg/G) - Ready to test!</text>\n        </binding>\n    </visual>\n</toast>\n''@; $xml = New-Object Windows.Data.Xml.Dom.XmlDocument; $xml.LoadXml($template); $toast = [Windows.UI.Notifications.ToastNotification]::new($xml); [Windows.UI.Notifications.ToastNotificationManager]::CreateToastNotifier(''Claude Code'').Show($toast)\")",
      "Bash(powershell.exe -Command \"[Windows.UI.Notifications.ToastNotificationManager, Windows.UI.Notifications, ContentType = WindowsRuntime] | Out-Null; [Windows.Data.Xml.Dom.XmlDocument, Windows.Data.Xml.Dom.XmlDocument, ContentType = WindowsRuntime] | Out-Null; $template = @''\n<toast>\n    <visual>\n        <binding template=\"\"ToastText02\"\">\n            <text id=\"\"1\"\">TF-Engine v14 Complete!</text>\n            <text id=\"\"2\"\">Vimium-style hints - Yellow boxes appear directly over each button when you press F!</text>\n        </binding>\n    </visual>\n</toast>\n''@; $xml = New-Object Windows.Data.Xml.Dom.XmlDocument; $xml.LoadXml($template); $toast = [Windows.UI.Notifications.ToastNotification]::new($xml); [Windows.UI.Notifications.ToastNotificationManager]::CreateToastNotifier(''Claude Code'').Show($toast)\")",
      "Bash(powershell.exe -Command \"[Windows.UI.Notifications.ToastNotificationManager, Windows.UI.Notifications, ContentType = WindowsRuntime] | Out-Null; [Windows.Data.Xml.Dom.XmlDocument, Windows.Data.Xml.Dom.XmlDocument, ContentType = WindowsRuntime] | Out-Null; $template = @''\n<toast>\n    <visual>\n        <binding template=\"\"ToastText02\"\">\n            <text id=\"\"1\"\">TF-Engine v15 Complete!</text>\n            <text id=\"\"2\"\">Navigation menu + Dialog buttons now work with VIM hints!</text>\n        </binding>\n    </visual>\n</toast>\n''@; $xml = New-Object Windows.Data.Xml.Dom.XmlDocument; $xml.LoadXml($template); $toast = [Windows.UI.Notifications.ToastNotification]::new($xml); [Windows.UI.Notifications.ToastNotificationManager]::CreateToastNotifier(''Claude Code'').Show($toast)\")",
      "Bash(powershell.exe -Command \"[Windows.UI.Notifications.ToastNotificationManager, Windows.UI.Notifications, ContentType = WindowsRuntime] | Out-Null; [Windows.Data.Xml.Dom.XmlDocument, Windows.Data.Xml.Dom.XmlDocument, ContentType = WindowsRuntime] | Out-Null; $template = @''\n<toast>\n    <visual>\n        <binding template=\"\"ToastText02\"\">\n            <text id=\"\"1\"\">TF-Engine v16 Built!</text>\n            <text id=\"\"2\"\">Compilation errors fixed - ready to test!</text>\n        </binding>\n    </visual>\n</toast>\n''@; $xml = New-Object Windows.Data.Xml.Dom.XmlDocument; $xml.LoadXml($template); $toast = [Windows.UI.Notifications.ToastNotification]::new($xml); [Windows.UI.Notifications.ToastNotificationManager]::CreateToastNotifier(''Claude Code'').Show($toast)\")",
      "Bash(powershell.exe -Command \"[Windows.UI.Notifications.ToastNotificationManager, Windows.UI.Notifications, ContentType = WindowsRuntime] | Out-Null; [Windows.Data.Xml.Dom.XmlDocument, Windows.Data.Xml.Dom.XmlDocument, ContentType = WindowsRuntime] | Out-Null; $template = @''\n<toast>\n    <visual>\n        <binding template=\"\"ToastText02\"\">\n            <text id=\"\"1\"\">TF-Engine Dialog Fix!</text>\n            <text id=\"\"2\"\">Duplicate OK buttons removed - info dialogs now show single button correctly!</text>\n        </binding>\n    </visual>\n</toast>\n''@; $xml = New-Object Windows.Data.Xml.Dom.XmlDocument; $xml.LoadXml($template); $toast = [Windows.UI.Notifications.ToastNotification]::new($xml); [Windows.UI.Notifications.ToastNotificationManager]::CreateToastNotifier(''Claude Code'').Show($toast)\")",
      "Bash(powershell.exe -Command \"[Windows.UI.Notifications.ToastNotificationManager, Windows.UI.Notifications, ContentType = WindowsRuntime] | Out-Null; [Windows.Data.Xml.Dom.XmlDocument, Windows.Data.Xml.Dom.XmlDocument, ContentType = WindowsRuntime] | Out-Null; $template = ''<toast><visual><binding template=\"\"ToastText02\"\"><text id=\"\"1\"\">TF-Engine Dialog Fix</text><text id=\"\"2\"\">Duplicate buttons removed - ready to test!</text></binding></visual></toast>''; $xml = New-Object Windows.Data.Xml.Dom.XmlDocument; $xml.LoadXml($template); $toast = [Windows.UI.Notifications.ToastNotification]::new($xml); [Windows.UI.Notifications.ToastNotificationManager]::CreateToastNotifier(''Claude Code'').Show($toast)\")",
      "Bash(powershell.exe -Command \"[Windows.UI.Notifications.ToastNotificationManager, Windows.UI.Notifications, ContentType = WindowsRuntime] | Out-Null; [Windows.Data.Xml.Dom.XmlDocument, Windows.Data.Xml.Dom.XmlDocument, ContentType = WindowsRuntime] | Out-Null; $template = ''<toast><visual><binding template=\"\"ToastText02\"\"><text id=\"\"1\"\">TF-Engine VIM Navigation Fixed!</text><text id=\"\"2\"\">Scrolling (j/k/h/l/d/u) restored + Vimium-style hint algorithm implemented!</text></binding></visual></toast>''; $xml = New-Object Windows.Data.Xml.Dom.XmlDocument; $xml.LoadXml($template); $toast = [Windows.UI.Notifications.ToastNotification]::new($xml); [Windows.UI.Notifications.ToastNotificationManager]::CreateToastNotifier(''Claude Code'').Show($toast)\")",
      "Read(//c/wsl.localhost/kali-linux/home/kali/vimium/**)",
      "Bash(powershell.exe -Command \"[Windows.UI.Notifications.ToastNotificationManager, Windows.UI.Notifications, ContentType = WindowsRuntime] | Out-Null; [Windows.Data.Xml.Dom.XmlDocument, Windows.Data.Xml.Dom.XmlDocument, ContentType = WindowsRuntime] | Out-Null; $xml = New-Object Windows.Data.Xml.Dom.XmlDocument; $xml.LoadXml(''<toast><visual><binding template=\"\"ToastText02\"\"><text id=\"\"1\"\">TF-Engine VIM Complete!</text><text id=\"\"2\"\">Multi-char hints + Live search working!</text></binding></visual></toast>''); $toast = [Windows.UI.Notifications.ToastNotification]::new($xml); [Windows.UI.Notifications.ToastNotificationManager]::CreateToastNotifier(''Claude Code'').Show($toast)\")",
      "Bash(mkdir:*)",
      "Bash(powershell.exe -Command \"[Windows.UI.Notifications.ToastNotificationManager, Windows.UI.Notifications, ContentType = WindowsRuntime] | Out-Null; [Windows.Data.Xml.Dom.XmlDocument, Windows.Data.Xml.Dom.XmlDocument, ContentType = WindowsRuntime] | Out-Null; $xml = New-Object Windows.Data.Xml.Dom.XmlDocument; $xml.LoadXml(''<toast><visual><binding template=\"\"ToastText02\"\"><text id=\"\"1\"\">TF-Engine Trade Sessions</text><text id=\"\"2\"\">Complete planning docs ready - 3 files in plans/ folder for your review!</text></binding></visual></toast>''); $toast = [Windows.UI.Notifications.ToastNotification]::new($xml); [Windows.UI.Notifications.ToastNotificationManager]::CreateToastNotifier(''Claude Code'').Show($toast)\")",
      "Bash(powershell.exe -Command \"[Windows.UI.Notifications.ToastNotificationManager, Windows.UI.Notifications, ContentType = WindowsRuntime] | Out-Null; [Windows.Data.Xml.Dom.XmlDocument, Windows.Data.Xml.Dom.XmlDocument, ContentType = WindowsRuntime] | Out-Null; $xml = New-Object Windows.Data.Xml.Dom.XmlDocument; $xml.LoadXml(''<toast><visual><binding template=\"\"ToastText02\"\"><text id=\"\"1\"\">TF-Engine Trade Sessions</text><text id=\"\"2\"\">Planning complete - 3 docs ready for review!</text></binding></visual></toast>''); $toast = [Windows.UI.Notifications.ToastNotification]::new($xml); [Windows.UI.Notifications.ToastNotificationManager]::CreateToastNotifier(''Claude Code'').Show($toast)\")",
      "Bash(powershell.exe -Command \"[Windows.UI.Notifications.ToastNotificationManager, Windows.UI.Notifications, ContentType = WindowsRuntime] | Out-Null; [Windows.Data.Xml.Dom.XmlDocument, Windows.Data.Xml.Dom.XmlDocument, ContentType = WindowsRuntime] | Out-Null; $template = ''<toast><visual><binding template=\"\"ToastText02\"\"><text id=\"\"1\"\">TF-Engine Trade Sessions</text><text id=\"\"2\"\">Planning complete - 3 docs ready for review!</text></binding></visual></toast>''; $xml = New-Object Windows.Data.Xml.Dom.XmlDocument; $xml.LoadXml($template); $toast = [Windows.UI.Notifications.ToastNotification]::new($xml); [Windows.UI.Notifications.ToastNotificationManager]::CreateToastNotifier(''Claude Code'').Show($toast)\")",
      "Bash(/mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -Command \"\n[Windows.UI.Notifications.ToastNotificationManager, Windows.UI.Notifications, ContentType = WindowsRuntime] | Out-Null\n[Windows.Data.Xml.Dom.XmlDocument, Windows.Data.Xml.Dom.XmlDocument, ContentType = WindowsRuntime] | Out-Null\n\n$template = @''\n<toast>\n    <visual>\n        <binding template=\"\"ToastText02\"\">\n            <text id=\"\"1\"\">TF-Engine Trade Sessions</text>\n            <text id=\"\"2\"\">Planning complete - 3 docs ready in plans/ folder!</text>\n        </binding>\n    </visual>\n</toast>\n''@\n\n$xml = New-Object Windows.Data.Xml.Dom.XmlDocument\n$xml.LoadXml($template)\n$toast = [Windows.UI.Notifications.ToastNotification]::new($xml)\n[Windows.UI.Notifications.ToastNotificationManager]::CreateToastNotifier(''Claude Code'').Show($toast)\n\")",
      "Bash(mv:*)",
      "Bash(test:*)",
      "Bash(/mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -Command \"\n[Windows.UI.Notifications.ToastNotificationManager, Windows.UI.Notifications, ContentType = WindowsRuntime] | Out-Null\n[Windows.Data.Xml.Dom.XmlDocument, Windows.Data.Xml.Dom.XmlDocument, ContentType = WindowsRuntime] | Out-Null\n\n$template = @''\n<toast>\n    <visual>\n        <binding template=\"\"ToastText02\"\">\n            <text id=\"\"1\"\">TF-Engine Cleanup Complete!</text>\n            <text id=\"\"2\"\">Root directory organized - 19 old files moved to docs/old/</text>\n        </binding>\n    </visual>\n</toast>\n''@\n\n$xml = New-Object Windows.Data.Xml.Dom.XmlDocument\n$xml.LoadXml($template)\n$toast = [Windows.UI.Notifications.ToastNotification]::new($xml)\n[Windows.UI.Notifications.ToastNotificationManager]::CreateToastNotifier(''Claude Code'').Show($toast)\n\")",
      "Bash(powershell.exe -Command \"[Windows.UI.Notifications.ToastNotificationManager, Windows.UI.Notifications, ContentType = WindowsRuntime] | Out-Null; [Windows.Data.Xml.Dom.XmlDocument, Windows.Data.Xml.Dom.XmlDocument, ContentType = WindowsRuntime] | Out-Null; $template = ''<toast><visual><binding template=\"\"ToastText02\"\"><text id=\"\"1\"\">TF-Engine Cleanup Complete!</text><text id=\"\"2\"\">Root directory organized - 19 old files moved to docs/old/</text></binding></visual></toast>''; $xml = New-Object Windows.Data.Xml.Dom.XmlDocument; $xml.LoadXml($template); $toast = [Windows.UI.Notifications.ToastNotification]::new($xml); [Windows.UI.Notifications.ToastNotificationManager]::CreateToastNotifier(''Claude Code'').Show($toast)\")"
    ],
    "deny": [],
    "ask": []
  }
}
